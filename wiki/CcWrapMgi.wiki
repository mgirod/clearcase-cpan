#summary ClearCase::Wrapper::MGi: support for branch-no-merge strategy, and incremental types

= Introduction =

This wrapper is distributed via CPAN, and was documented [http://search.cpan.org/perldoc?ClearCase::Wrapper::MGi there]
([http://www.cmwiki.com/IncrementalTypesImp sketched in the cm wiki]).
We'll however gradually [UcmAlternative develop these] here.
It builds upon !ClearCase::Wrapper and thus upon [ClearCaseArgv ClearCase::Argv].
It aims at supporting various novel usage patterns of (base) !ClearCase.

= Details =

The code on this site is developed in a _dev_ branch.
  * I do not test _ctcmd_ on Unix anymore for the time being. I currently use mostly cygwin, and the port has delayed my main work.
  * My intention was to develop a regression testing suite, which I started to do on !ClearCase::!SyncTree. I withdraw from my preliminary implementation, meaning that I have nothing solid in either package, which obviously is weak. A proper regression testion suite would surely help me...
  * I also acknowledge minor deficiencies in the support for the branch-no-merge strategy:
    * missing support for {{{des -fmt "%PVn"}}} and {{{%PSn}}}
    * missing support for graphical {{{lsgen}}} (based on Tk)
    * missing support for {{{annotate}}} (based on pruning the -all output)
  * No major [http://code.google.com/p/clearcase-cpan/issues/list known bugs] now, but:
    * ipc is better supported in !ClearCase::Argv, even *only* under cygwin. The mode is forced in every function and {{{ctcmd}}} may still be preferred for some (which is wrong). It will always succeed on Windows, either on top of !ClearCase::!CtCmd if installed, or on top of CAL. I originally missed the existence of support in !ClearCase::Wrapper for flags such as {{{-/ipc=1}}}, and the possibility to set it in the {{{.clearcase_profile.pl}}} file.
    * The source containers get slightly bloated: every new branch results in a full copy. This is only a minor nuisance... Solving it is possible: via a special element type manager... with its own quirks (would need to be installed on every client!)
  * Intentions:
    * rollout/rollback, via hyperlinks to rollback versions (faster than through generating view equivalent to previous state)
    * support for incremental types, and first for label types, including:
      * consolidation of sparse fixed labels
    * availability of functionality from !ClearCase::Wrapper:DSB, such as inclusion of config spec components
    * integration of {{{synctree}}} under {{{cleartool}}}, including via the graphical interface.
  * Mostly done (although now, I'd like to redesign both to use classes, so that it would be easier/shorter to take it in use in new functions: the current technique is too verbose...):
    * [CavComments interactive input]: generalize to avoid all hangs
    * [CwmLockingIssues lock/unlock], using site specific methods when not owning the equivalent or previous types.
  * Recently done:
    * {{{setdepth}}} recursion was shortened (for performance and scalability reasons) when a depth is given, e.g. supporting {{{diff -pred}}}. The ambiguity with 'depth' (default: the number of levels _displayed_ which is intuitive and follows _lsvtree_) may be lifted by using the {{{-a/ll}}} option.
    * support for incremental types:
      * support for [GlobalTypes global types] (using admin vobs or not)
      * folding config specs (automatic generation of the cascading rules)
    * [WmgArc mkxxtype -arc]
  * Under work:
    * rmtype (incremental types and interactive prompts)
    * [WmgMkLabel mklabel] -con, and mklbtype -con