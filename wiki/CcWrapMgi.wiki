#summary ClearCase::Wrapper::MGi: support for branch-no-merge strategy, and incremental types

= Introduction =

This wrapper is distributed via CPAN, and is documented [http://search.cpan.org/search?query=ClearCase%3A%3AWrapper%3A%3AMGi&mode=all there].
It builds upon !ClearCase::Wrapper and thus upon [ClearCaseArgv ClearCase::Argv].
It aims at supporting various novel usage patterns of (base) !ClearCase.

= Details =

The code on this site is currently only found in a _tests_ branch.
  * My own test environment moved from _ctcmd_ to _ipc_ mode, after which I noticed major problems, which were fixed in !ClearCase::Argv, in the version available from this site, and proposed for publication to CPAN.
  * I fixed a bug in lsgen, maybe only relevant in ipc mode, but which impacted its fundamental function (wrong, truncated, output)
  * I also made tentative fixes in MGI.pm, which have not been thoroughly tested--I use myself the current version.
  * My intention was to develop a regression testing suite, which I started to do on !ClearCase::!SyncTree (still pending)
  * I also acknowledge deficiencies in the support for the branch-no-merge strategy:
    * verbose output for {{{co}}}, and no cleanup of the {{{*.contrib}}} files
    * missing support for {{{diff -pred}}}; and {{{des -fmt "%PVn"}}} and {{{%PSn}}}
    * missing support for graphical {{{lsgen}}}
    * missing support for {{{annotate}}}
    * suspicious effects with {{{merge}}}, maybe a !ClearCase bug.
  * [http://code.google.com/p/clearcase-cpan/issues/list Known bugs]:
    * no support for interactive comments (problem in {{{cleartool -status}}}, not worked-around in !ClearCase::Argv)
    * indentation error in {{{lsgen}}} for _alternative paths_
  * Intentions:
    * support for incremental types, and first for label types, including:
      * {{{mklbtype -inc}}}
      * moving the floating and applying the fixed in {{{mklabel}}} under the {{{##:TypeFamilies: incremental}}} keyword in the config spec
      * lock/unlock (locking both. Note: possible ownership problems)
      * folding config specs (automatic generation of the cascading rules)
      * consolidation of sparse fixed labels
    * availability of functionality from !ClearCase::Wrapper:DSB, such as inclusion of config spec components
    * integration of {{{synctree}}} under {{{cleartool}}}, including via the graphical interface.