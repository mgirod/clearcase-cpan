#summary A new type manager for text files?

= Introduction =

The source containers for elements of type _text file_ get bloated.
Every new branch results in a full copy. This is only a minor nuisance but may eventually result in problems.

Note that this may also have positive consequences, e.g. enhance the performance of version handling.

Solving it is possible: via a special element type manager.

But this opens a can of worms in the context of poor support for managing user types on !ClearCase clients. Can one avoid it? The answer seems to be *yes*!

= Details =

One might think of branching off an intermediate branch, itself under /main/0. This would however need to be of a shared type (e.g. _m_), and shared branch types are not supported.
In addition, it is likely that this wouldn't help: the base of every new branch would still be empty, and difference from it thus a full copy.

User type managers bring their own quirks: they need to be installed on every client, in a platform suitable way.

Note that the same issue affects some other types than _text files_ e.g. when the source container is shared on a per branch basis.

I analyzed the format of source containers for text file elements [http://www.cmcrossroads.com/cgi-bin/cmwiki/view/CM/FormatSrcCnt in the cm wiki].

In the case of non-cascading branches off /main/0, the effect observed is twofold:
  * all the branches are marked as '0 0', i.e. spawn from /main/0
  * all the versions 1 start with an insertion record '^I n 1' which is a full copy

==Edit the previous version in the source container at checkout/mkbranch==
This gives a hope that modifying sligthly this header information might be sufficient!
{{{
bar> ct ls a
a@@/main/mg-015/1                                        Rule: MG [-mkbranch mg]
bar> cat a

4444
bar> ct dump a | grep cont=
source cont="/cc/views07/emagiro/bar.vbs/s/sdft/13/32/0-b17e438b31a011e1961f00156004455c-f9"
clrtxt cont="/cc/views07/emagiro/bar.vbs/c/cdft/2a/10/b17e438b31a011e1961f00156004455c"
bar> cat /cc/views07/emagiro/bar.vbs/s/sdft/13/32/0-b17e438b31a011e1961f00156004455c-f9
^S db1 2
^V b17e438b.31a011e1.961f.00:15:60:04:45:5c 2 1 4efb93c2
^V bc8e4889.319f11e1.87ca.00:01:84:2b:ec:ee 2 0 4efb9220
^B bc8e4885.319f11e1.87ca.00:01:84:2b:ec:ee 2 1 1
^V fa3e436f.319f11e1.961f.00:15:60:04:45:5c 1 1 4efb90f3
^V 088e43df.31a011e1.8195.00:01:84:2b:ec:ee 1 0 4efb90f3
^B 088e43db.31a011e1.8195.00:01:84:2b:ec:ee 1 0 0
^V 088e43d7.31a011e1.8195.00:01:84:2b:ec:ee 0 0 4efb90f3
^B 088e43d3.31a011e1.8195.00:01:84:2b:ec:ee 0 0 0
^E 088e43cf.31a011e1.8195.00:01:84:2b:ec:ee
^I 1 1 1

^I 2 1 1
4444
bar> ct co -nc a
Created branch "mg" from "a" version "/main/0".
Checked out "a" from version "/main/mg/0".
bar> cd -
/cc/views07/emagiro/bar.vbs/s/sdft/13/32
32> ls -l
total 8
-r--r--r--   1 emagiro  at1          619 Dec 28 22:16 0-a70e556531a111e19d2e0001842becee-f6
32> head 0-a70e556531a111e19d2e0001842becee-f6
^S db1 3
^V a70e5565.31a111e1.9d2e.00:01:84:2b:ec:ee 3 0 4efb9558
^B a70e5561.31a111e1.9d2e.00:01:84:2b:ec:ee 3 0 0
^V b17e438b.31a011e1.961f.00:15:60:04:45:5c 2 1 4efb93c2
^V bc8e4889.319f11e1.87ca.00:01:84:2b:ec:ee 2 0 4efb9220
^B bc8e4885.319f11e1.87ca.00:01:84:2b:ec:ee 2 1 1
^V fa3e436f.319f11e1.961f.00:15:60:04:45:5c 1 1 4efb90f3
^V 088e43df.31a011e1.8195.00:01:84:2b:ec:ee 1 0 4efb90f3
^B 088e43db.31a011e1.8195.00:01:84:2b:ec:ee 1 0 0
^V 088e43d7.31a011e1.8195.00:01:84:2b:ec:ee 0 0 4efb90f3
32> perl -pi -e 's/B a70e5561.31a111e1.9d2e.00:01:84:2b:ec:ee 3 0 0/B a70e5561.31a111e1.9d2e.00:01:84:2b:ec:ee 3 2 1/' 0-a70e556531a111e19d2e0001842becee-f6
32> head -3 0-a70e556531a111e19d2e0001842becee-f6
^S db1 3
^V a70e5565.31a111e1.9d2e.00:01:84:2b:ec:ee 3 0 4efb9558
^B a70e5561.31a111e1.9d2e.00:01:84:2b:ec:ee 3 2 1
32> cd -
/local/scratch/bar
bar> echo 5555 >> a
bar> ct ci -nc a
Checked in "a" version "/main/mg/1".
bar> cat a

4444
5555
bar> ct dump a | grep cont=
source cont="/cc/views07/emagiro/bar.vbs/s/sdft/13/32/0-f78e43a731a111e1961f00156004455c-6j"
clrtxt cont="/cc/views07/emagiro/bar.vbs/c/cdft/37/42/f78e43a731a111e1961f00156004455c"
bar> cat /cc/views07/emagiro/bar.vbs/s/sdft/13/32/0-f78e43a731a111e1961f00156004455c-6j
^S db1 3
^V f78e43a7.31a111e1.961f.00:15:60:04:45:5c 3 1 4efb95e6
^V a70e5565.31a111e1.9d2e.00:01:84:2b:ec:ee 3 0 4efb9558
^B a70e5561.31a111e1.9d2e.00:01:84:2b:ec:ee 3 2 1
^V b17e438b.31a011e1.961f.00:15:60:04:45:5c 2 1 4efb93c2
^V bc8e4889.319f11e1.87ca.00:01:84:2b:ec:ee 2 0 4efb9220
^B bc8e4885.319f11e1.87ca.00:01:84:2b:ec:ee 2 1 1
^V fa3e436f.319f11e1.961f.00:15:60:04:45:5c 1 1 4efb90f3
^V 088e43df.31a011e1.8195.00:01:84:2b:ec:ee 1 0 4efb90f3
^B 088e43db.31a011e1.8195.00:01:84:2b:ec:ee 1 0 0
^V 088e43d7.31a011e1.8195.00:01:84:2b:ec:ee 0 0 4efb90f3
^B 088e43d3.31a011e1.8195.00:01:84:2b:ec:ee 0 0 0
^E 088e43cf.31a011e1.8195.00:01:84:2b:ec:ee
^I 1 1 1

^I 2 1 1
4444
^I 3 1 1
5555
}}}
I.e. it works: only the diff, {{{5555}}} was added to the source container!
==Effect on annotate==
Now, {{{annotate}}} gets confused...
It seems it cannot match the version name corresponding to the oid, with the one it would construct from the dependency graph:
{{{
cleartool: Error: Unknown version "I b17e438b.31a011e1.961f.00:15:60:04:45:5c 4444
}}}
although:
{{{
bar> ct des -s oid:b17e438b.31a011e1.961f.00:15:60:04:45:5c
/local/scratch/bar/a@@/main/mg-015/1
}}}
==Generating cleartext containers==
But {{{annotate}}} is not critical. Especially, it can be fixed within the wrapper, i.e. without requiring a new type manager, and its installation on every single !ClearCase client.
The critical operation is the generation of cleartext containers, and *it* works:
{{{
bar> ct lsgen -d 3 -a a
a@@/main/mg/1 
 a@@/main/mg-015/1 (MG, MG_1.01)
  a@@/main/mg-014/1 (MG_1.00)
   a@@/main/0 
bar> ct dump a@@/main/mg/1 | grep cont=
source cont="/cc/views07/emagiro/bar.vbs/s/sdft/13/32/0-f78e43a731a111e1961f00156004455c-6j"
clrtxt cont="/cc/views07/emagiro/bar.vbs/c/cdft/37/42/f78e43a731a111e1961f00156004455c"
bar> ct dump a@@/main/mg-015/1 | grep cont=
source cont="/cc/views07/emagiro/bar.vbs/s/sdft/13/32/0-f78e43a731a111e1961f00156004455c-6j"
clrtxt cont="/cc/views07/emagiro/bar.vbs/c/cdft/2a/10/b17e438b31a011e1961f00156004455c"
bar> ct dump a@@/main/mg-014/1 | grep cont=
source cont="/cc/views07/emagiro/bar.vbs/s/sdft/13/32/0-f78e43a731a111e1961f00156004455c-6j"
clrtxt cont="/cc/views07/emagiro/bar.vbs/c/cdft/a/25/fa3e436f319f11e1961f00156004455c"
bar> ll /cc/views07/emagiro/bar.vbs/c/cdft/37/42/f78e43a731a111e1961f00156004455c /cc/views07/emagiro/bar.vbs/c/cdft/2a/10/b17e438b31a011e1961f00156004455c /cc/views07/emagiro/bar.vbs/c/cdft/a/25/fa3e436f319f11e1961f00156004455c
-r--r--r--   1 emagiro  at1            6 Dec 28 22:10 /cc/views07/emagiro/bar.vbs/c/cdft/2a/10/b17e438b31a011e1961f00156004455c
-r--r--r--   1 emagiro  at1           11 Dec 28 22:20 /cc/views07/emagiro/bar.vbs/c/cdft/37/42/f78e43a731a111e1961f00156004455c
-r--r--r--   1 emagiro  at1            1 Dec 28 22:03 /cc/views07/emagiro/bar.vbs/c/cdft/a/25/fa3e436f319f11e1961f00156004455c
bar> rm -f /cc/views07/emagiro/bar.vbs/c/cdft/a/25/fa3e436f319f11e1961f00156004455c
bar> cat a@@/main/mg-014/1

bar> rm -f /cc/views07/emagiro/bar.vbs/c/cdft/37/42/f78e43a731a111e1961f00156004455c
bar> cat a@@/main/mg-015/1

4444
bar> rm -f /cc/views07/emagiro/bar.vbs/c/cdft/2a/10/b17e438b31a011e1961f00156004455c
bar> cat a@@/main/mg/1

4444
5555
}}}
=Other element types than text file=
The {{{xml}}} element type is in the {{{binary_delta_file}}} hierarchy.
For elements of this type, the source container is shared _per branch_ (at least in the case of branches spawn from {{{/main/0}}}).
{{{
aa> ct lsvtree -s -merge a.xml
a.xml@@/main
a.xml@@/main/0
a.xml@@/main/mg-006
a.xml@@/main/mg-006/2
a.xml@@/main/mg-007
a.xml@@/main/mg-007/1
aa> ct dump a.xml@@/main/mg-006/1 | grep cont=
source cont="\\EV68B599EABE1A\CC_STG\foo.vbs\s\sdft\19\4\yq-66bae1df67d54d2c98175d565699b4bc-ct"
clrtxt cont="\\EV68B599EABE1A\CC_STG\foo.vbs\c\cdft\27\0\d578cd122ef44dec8480f6e9f0f4f43a"
aa> ct dump a.xml@@/main/mg-006/2 | grep cont=
source cont="\\EV68B599EABE1A\CC_STG\foo.vbs\s\sdft\19\4\yq-66bae1df67d54d2c98175d565699b4bc-ct"
clrtxt cont="\\EV68B599EABE1A\CC_STG\foo.vbs\c\cdft\19\14\66bae1df67d54d2c98175d565699b4bc"
aa> ct dump a.xml@@/main/mg-007/1 | grep cont=
source cont="\\EV68B599EABE1A\CC_STG\foo.vbs\s\sdft\19\4\yq-fc8dac6b565641fa8974d7f579408c2c-3s"
clrtxt cont="\\EV68B599EABE1A\CC_STG\foo.vbs\c\cdft\10\2b\fc8dac6b565641fa8974d7f579408c2c"
}}}
The duplication of data due to the non-cascading scheme takes thus place (if it does) in a new file, instead of as for text files, in the same one.
The source container is compressed, and even uncompressed, contains binary data (some stripped from/converted to textual representation in the below transcript):
{{{
aa> file /cygdrive/c/CC_STG/foo.vbs/s/sdft/19/4/yq-66bae1df67d54d2c98175d565699b4bc-ct
/cygdrive/c/CC_STG/foo.vbs/s/sdft/19/4/yq-66bae1df67d54d2c98175d565699b4bc-ct: gzip compressed data, was "<fd:1>", from NTFS filesystem (NT)
aa> gunzip -cd /cygdrive/c/CC_STG/foo.vbs/s/sdft/19/4/yq-66bae1df67d54d2c98175d565699b4bc-ct > /tmp/foo
aa> cat /tmp/foo | tr '\000' '\n' | egrep -v '^$'
BR
2c7618ca.caec44b2.aaf0.fc:76:25:1a:21:57
4e9c601b
<xml>
1 2 3 4
</xml>


66bae1df.67d54d2c.9817.5d:56:56:99:b4:bc
4e9c61d0
2
3c8a4663.043848ac.a2ac.48:8c:27:eb:5d:f4
3c8a4663.043848ac.a2ac.48:8c:27:eb:5d:f4
d578cd12.2ef44dec.8480.f6:e9:f0:f4:f4:3a
1
d578cd12.2ef44dec.8480.f6:e9:f0:f4:f4:3a
4e9c601b
1
3c8a4663.043848ac.a2ac.48:8c:27:eb:5d:f4
3c8a4663.043848ac.a2ac.48:8c:27:eb:5d:f4
2eb25e4d.956541e4.82ee.c5:99:ef:04:b5:0c
0

	
^S
^U
^U
}}}