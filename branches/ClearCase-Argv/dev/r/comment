# -*- cperl -*-
use strict;
use Benchmark;

# Set one string comment to a temporary label type (created/removed).
# Check that it succeeded.
# This requires that the string value is properly quoted.
# This case mirrors a similar suite for mkattr.
# If an argument is given, sets dbglevel to 1
#
# This suite does not test the presence of triggers.

use Test::More tests => 20;
select(STDERR); $| = 1; select(STDOUT); $| = 1;
use ClearCase::Argv;
use Argv 1.25;

ClearCase::Argv->summary;      # start keeping stats
ClearCase::Argv->ipc(1);
my $ct = ClearCase::Argv->new({autochomp=>1});
my $silent = $ct->clone({stdout=>0, stderr=>0});
$silent->dbglevel(1) if @ARGV;
die "This test needs to be run in a view, in a vob\n"
  unless $ct->ls([qw(-s -d)], '.')->stderr(0)->qx;
die "Failed to create temporary test lbtype, please rmtype if exists\n"
  if $silent->mklbtype(['-c', 'temporary type for test case'], 'CMTTC')->system;
my $lbt = 'lbtype:CMTTC';

sub one_pass {
  my $ipc = shift;
  my $mode = $ipc? 'ipc' : 'fork';
  $silent->ipc($ipc);
  my $value = q(foo);
  ok(!$silent->chevent([qw(-rep -c), $value], $lbt)->system,
     "String comment set to '$value' ($mode mode, array syntax)");
  ok(!$silent->argv(qq(chevent -rep -c '$value' $lbt))->system,
     "String comment set to '$value' ($mode mode, string syntax)");
  $value = q(O'Toole);
  ok(!$silent->chevent([qw(-rep -c), $value], $lbt)->system,
     qq(String comment set to "$value" ($mode mode, array syntax)));
  ok(!$silent->argv(qq(chevent -rep -c "$value" $lbt))->system,
     qq(String comment set to \"$value\" ($mode mode, string syntax)));
  $value = q(*test*);
  ok(!$silent->chevent([qw(-rep -c), $value], $lbt)->system,
     "String comment set to '$value' ($mode mode, array syntax)");
  ok(!$silent->argv(qq(chevent -rep -c '$value' $lbt))->system,
     "String comment set to '$value' ($mode mode, string syntax)");
  $value = qq(Two lines: one,\ntwo);
  ok(!$silent->chevent([qw(-rep -c), $value], $lbt)->system,
     "String comment set to '$value' ($mode mode, array syntax)");
  ok(!$silent->argv(qq(chevent -rep -c '$value' $lbt))->system,
     "String comment set to '$value' ($mode mode, string syntax)");
  $value = 'created_since(today)';
  ok(!$silent->chevent([qw(-rep -c), $value], $lbt)->system,
     "String comment set to '$value' ($mode mode, array syntax)");
  ok(!$silent->argv(qq(chevent -rep -c '$value' $lbt))->system,
     "String comment set to '$value' ($mode mode, string syntax)");
}
one_pass(0);
one_pass(1);

print STDERR "\n", ClearCase::Argv->summary;   # print out the stats we kept
$silent->rmtype([qw(-f -rmall)], $lbt)->system;
